sortVar = 4,
ascend = FALSE,
title = c("Count of Dunkin' Locations in each U.S. State", "Data Collected from MapQuest API on June 26th, 2020"),
plotNames = "full",
ignoreNoMatches = TRUE)
library(blogdown)
serve_site()
serve_site()
![](https://raw.githubusercontent.com/ecypher/ecypher.github.io/master/images/Dunkin_Linked_MicromapST.png)
library(blogdown)
Complete_DT_2 <- readRDS("C:/Users/Cypher/Desktop/ecypher.github.io/content/english/ref files/Complete_DT_2.rds")
Dunkin_PD <- data.frame(type = c("mapcum","id","dotconf"),
lab1 = c("","","Dunkin' Stores per State"),
col1 = c(NA,NA,4),
col2 = c(NA,NA,3),
col3 = c(NA,NA,4))
#pdf(file = "Dunkin_MicroMap_14.pdf", width = 7, height = 11)
#png(file = "Dunkin_Linked_MicromapST.png", width = 7.5, height = 10, units = "in", #res =300)
windows(7.5, 10, xpinch = 72, ypinch = 72, point =9)
micromapST(Complete_DT_2,
panelDesc = Dunkin_PD,
rowNames = "full",
rowNamesCol = 1,
sortVar = 4,
ascend = FALSE,
title = c("Count of Dunkin' Locations in each U.S. State", "Data Collected from MapQuest API on June 26th, 2020"),
plotNames = "full",
ignoreNoMatches = TRUE)
# Load Packages
library(micromapST)
# Load Packages
library(micromapST)
Complete_DT_2 <- readRDS("C:/Users/Cypher/Desktop/ecypher.github.io/content/english/ref files/Complete_DT_2.rds")
Dunkin_PD <- data.frame(type = c("mapcum","id","dotconf"),
lab1 = c("","","Dunkin' Stores per State"),
col1 = c(NA,NA,4),
col2 = c(NA,NA,3),
col3 = c(NA,NA,4))
#pdf(file = "Dunkin_MicroMap_14.pdf", width = 7, height = 11)
#png(file = "Dunkin_Linked_MicromapST.png", width = 7.5, height = 10, units = "in", #res =300)
windows(7.5, 10, xpinch = 72, ypinch = 72, point =9)
micromapST(Complete_DT_2,
panelDesc = Dunkin_PD,
rowNames = "full",
rowNamesCol = 1,
sortVar = 4,
ascend = FALSE,
title = c("Count of Dunkin' Locations in each U.S. State", "Data Collected from MapQuest API on June 26th, 2020"),
plotNames = "full",
ignoreNoMatches = TRUE)
#dev.off()
serve_site()
library(blogdown)
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
knitr::include_app("https://liuyanguu.shinyapps.io/bcl_app/", height = "100%")
knitr::include_app("https://liuyanguu.shinyapps.io/bcl_app/", height = "100%")
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
library(blogdown)
serve_site()
blogdown::serve_site()
blogdown::serve_site()
shiny::runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
setwd("C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp/rsconnect/shinyapps.io/data-antics")
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
palette_set <- colorFactor(c("#ffa500", "#c53765"), domain = c("Y", "N"))
DT <- readRDS("Dunkin_Donuts_Shiny_Map_DT.rds")
install.packages("blogdown")
blogdown::serve_site()
bblogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
library(blogdown)
serve_site()
serve_site()
library(blogdown)
serve_site()
library(blogdown)
serve_site()
serve_site()
stop_server()
stop_server()
serve_site()
stop_server()
serve_site()
serve_site()
stop_server()
serve_site()
serve_site()
stop_server()
serve_site()
serve_site()
stop_server()
serve_site()
serve_site()
library(blogdown)
serve_site()
stop_server()
serve_site()
sstop_site()
stop_server()
serve_site()
serve_site()
stop_server()
library(blogdown)
serve_site()
stop_server()
serve_site()
serve_site()
stop_server()
serve_site()
serve_site()
stop_server()
serve_site()
stop_server()
serve_site()
stop_server()
stop_server()
serve_site()
stop_server()
serve_site()
stop_server()
serve_site()
library(blogdown)
serve_site()
stop_server()
serve_site()
stop_server()
servr::daemon_stop(2)
serve_site()
servr::daemon_stop(3)
stop_server()
serve_site()
servr::daemon_stop(4)
stop_server()
knitr::include_graphics("https://raw.githubusercontent.com/ecypher/ecypher.github.io/master/images/Dunkin_Resized.png")
serve_site()
servr::daemon_stop(5)
stop_server()
serve_site()
servr::daemon_stop(6)
stop_server()
serve_site()
servr::daemon_stop(7)
serve_site()
serve_site()
blogdown::stop_server()
blogdown::serve_site()
servr::daemon_stop(1)
blogdown::stop_server()
blogdown::serve_site()
servr::daemon_stop(2)
library(blogdown)
serve_site()
library(blogdown)
serve_site()
serve_site()
stop_server()
serve_site()
servr::daemon_stop(2)
stop_server()
serve_site()
servr::daemon_stop(3)
stop_server()
serve_site()
stop_server()
library(blogdown)
detach("package:blogdown", unload = TRUE)
library(blogdown)
serve_site()
servr::daemon_stop(1)
stop_server()
serve_site()
servr::daemon_stop(2)
stop_server()
serve_site()
shiny::runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
stop_se
stop_server()
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
serve_site()
servr::daemon_stop(4)
stop_server()
serve_site()
servr::daemon_stop(5)
stop_server()
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
serve_site()
servr::daemon_stop(6)
stop_server()
?addLegend()
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
serve_site()
servr::daemon_stop(7)
stop_server()
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
serve_site()
servr::daemon_stop(8)
stop_server()
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
runApp('C:/Users/Cypher/Desktop/Dunkin Analysis/Dunkin Map Application/DunkinMapApp')
serve_site()
serve_site()
stop_server()
serve_site()
servr::daemon_stop(10)
stop_server()
serve_site()
library(blogdown)
serve_site()
servr::daemon_stop(1)
stop_server()
serve_site()
servr::daemon_stop(2)
a
"a"
library(blogdown)
serve_site()
serve_site()
library(blogdown)
serve_site()
servr::browse_last()
servr::browse_last()
stop_server()
servr::browse_last()
serve_site()
stop_server()
library(blogdown)
serve_site()
library(blogdown)
serve_site()
stop_server()
serve_site()
library(blogdown)
serve_site()
serve_site()
library(blogdown)
sum(c(5,7,8))
serve_site()
library(blogdown)
serve_site()
stop_server()
serve_site()
library(blogdown)
serve_site()
stop_server()
serve_site()
library(blogdown)
stop_server()
serve_site()
stop_server()
serve_site()
stop_server()
library(blogdown)
serve_site()
stop_server()
servr::daemon_stop(1)
serve_site()
stop_server()
serve_site()
library(blogdown)
serve_site()
stop_server()
serve_site()
stop_server()
a <- 7 + 2
b <- 8 + 3
print(a + b)
serve_site()
serve_site()
a <- 7 + 2
b <- 8 + 3
print(a + b)
library(blogdown)
serve_site()
serv::browse_last()
serve_site()
stop_server()
library(blogdown)
serve_site()
servr::browse_last()
library(blogdown)
serve_site()
stop_server()
servr::daemon_stop(1)
library(blogdown)
serve_site()
library(blogdown)
serve_site()
serve_site()
library(blogdown)
serve_site()
library(blogdown)
serve_site()
servr::browse_last()
servr::browse_last()
library(blogdown)
serve_site()
stop_server()
library(blogdown)
serve_site()
servr::browse_last()
library(blogdown)
serve_site()
servr::browse_last()
library(blogdown)
serve_site()
library(blogdown)
serve_site()
library(blogdown)
serve_site()
library(blogdown)
serve_site()
servr::browse_last()
servr::browse_last()
library(blogdown)
serve_site()
detach("package:blogdown", unload = TRUE)
library(blogdown)
serve_site()
library(blogdown)
serve_site()
library(blogdown)
serve_site()
library(blogdown)
serve_site()
servr::browse_last()
library(blogdown)
blogdown::serve_site()
library(blogdown)
serve_site()
servr::daemon_stop(1)
library(blogdown)
blogdown:::serve_site()
blogdown:::serve_site()
library(blogdown)
blogdown:::serve_site()
#servr::browse_last()
library(blogdown)
detach("package:blogdown", unload = TRUE)
install.packages("blogdown")
library(blogdown)
blogdown:::serve_site()
blogdown:::serve_site()
library(blogdown)
serve_site()
library(blogdown)
serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
library(bookdown)
detach("package:bookdown", unload = TRUE)
library(blogdown)
serve_site()
library(blogdown)
serve_site()
library(blogdown)
serve_site()
unlink('content/english/posts/2020-07-10-test.en_cache', recursive = TRUE)
install.packages(c("cachem", "data.table", "Matrix", "mgcv"))
library(knitr)
getwd()
library(blogdown)
serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
serve_site()
serve_site()
blogdown:::serve_site()
library(blogdown)
check_hugo()
check_content()
blogdown::clean_duplicates(preview = FALSE)
check_content()
blogdown:::serve_site()
check_config()
blogdown::check_site()
blogdown::check_site()
find_hugo('all')
check_site()
check_netlify()
blogdown::config_netlify()
serve_site()
library(blogdown)
serve_site()
check_hugo()
config_Rprofile()
options(blogdown.hugo.version = "0.71.1")
blogdown::check_netlify()
blogdown::serve_site()
check_hugo()
library(blogdown)
check_hugo()
blogdown::check_netlify()
install_hugo()
serve_site()
# REMEMBER to restart R after you modify and save this file!
# First, execute the global .Rprofile if it exists. You may configure blogdown
# options there, too, so they apply to any blogdown projects. Feel free to
# ignore this part if it sounds too complicated to you.
if (file.exists("~/.Rprofile")) {
base::sys.source("~/.Rprofile", envir = environment())
}
# Now set options to customize the behavior of blogdown for this project. Below
# are a few sample options; for more options, see
# https://bookdown.org/yihui/blogdown/global-options.html
options(
# to automatically serve the site on RStudio startup, set this option to TRUE
blogdown.serve_site.startup = FALSE,
# to disable knitting Rmd files on save, set this option to FALSE
blogdown.knit.on_save = TRUE,
# build .Rmd to .html (via Pandoc); to build to Markdown, set this option to 'markdown'
blogdown.method = 'html'
)
# fix Hugo version
options(blogdown.hugo.version = "0.71.1")
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
setwd("C:/Users/Cypher/Desktop/ecypher.github.io")
blogdown:::new_post_addin()
blogdown::new_site()
blogdown:::serve_site()
blogdown:::serve_site()
setwd("C:/Users/Cypher/Desktop/ecypher.github.io")
blogdown:::serve_site()
getwd()
library(dplyr)
library(knitr)
library(blogdown)
serve_site()
library(rstudioapi)
serve_site()
detach("package:rstudioapi", unload = TRUE)
serve_site()
blogdown:::serve_site()
knit_with_parameters('C:/Users/Cypher/Desktop/ecypher.github.io/content/english/posts/2020-07-10-test.en.Rmd')
knitr::knit()
remotes::install_github('yihui/knitr', upgrade = TRUE)
library(blogdown)
detach("package:blogdown", unload = TRUE)
library(blogdown)
serve_site()
version
packageVersion("blogdown")
check_hugo()
blogdown::config_Rprofile()
options(blogdown.hugo.version = "0.81.0")
check_hugo()
serve_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
#library(dplyr)
# General Kenobi
knitr::include_graphics("https://raw.githubusercontent.com/ecypher/ecypher.github.io/master/images/Dunkin_Dendo_D3.png")
blogdown:::preview_site()
blogdown::serve_site()
blogdown::install_hugo()
blogdown:::preview_site()
blogdown::serve_site()
blogdown::hugo_version()
blogdown:::preview_site()
blogdown::build_site()
blogdown:::preview_site()
